diff --git a/node_modules/graphql-markdown/src/renderSchema.js b/node_modules/graphql-markdown/src/renderSchema.js
index 92c25ac..dd635f7 100644
--- a/node_modules/graphql-markdown/src/renderSchema.js
+++ b/node_modules/graphql-markdown/src/renderSchema.js
@@ -53,8 +53,7 @@ function renderObject(type, options) {
   fields.forEach((field) => {
     printer('<tr>')
     printer(
-      `<td colspan="2" valign="top"><strong>${field.name}</strong>${
-        field.isDeprecated ? ' ⚠️' : ''
+      `<td colspan="2" valign="top"><strong>${field.name}</strong>${field.isDeprecated ? ' ⚠️' : ''
       }</td>`
     )
     printer(`<td valign="top">${renderType(field.type, { getTypeURL })}</td>`)
@@ -106,6 +105,7 @@ function renderSchema(schema, options) {
   const printer = options.printer || console.log
   const headingLevel = options.headingLevel || 1
   const unknownTypeURL = options.unknownTypeURL
+  const typeUrl = options.typeUrl;
 
   if (schema.__schema) {
     schema = schema.__schema
@@ -115,7 +115,7 @@ function renderSchema(schema, options) {
   const typeMap = schema.types.reduce((typeMap, type) => {
     return Object.assign(typeMap, { [type.name]: type })
   }, {})
-  const getTypeURL = (type) => {
+  const getTypeURL = typeUrl ? typeUrl : (type) => {
     const url = `#${type.name.toLowerCase()}`
     if (typeMap[type.name]) {
       return url
@@ -206,8 +206,7 @@ function renderSchema(schema, options) {
 
   if (query) {
     printer(
-      `\n${'#'.repeat(headingLevel + 1)} Query${
-        query.name === 'Query' ? '' : ' (' + query.name + ')'
+      `\n${'#'.repeat(headingLevel + 1)} Query${query.name === 'Query' ? '' : ' (' + query.name + ')'
       }`
     )
     renderObject(query, { skipTitle: true, headingLevel, printer, getTypeURL })
@@ -215,8 +214,7 @@ function renderSchema(schema, options) {
 
   if (mutation) {
     printer(
-      `\n${'#'.repeat(headingLevel + 1)} Mutation${
-        mutation.name === 'Mutation' ? '' : ' (' + mutation.name + ')'
+      `\n${'#'.repeat(headingLevel + 1)} Mutation${mutation.name === 'Mutation' ? '' : ' (' + mutation.name + ')'
       }`
     )
     renderObject(mutation, {
@@ -257,8 +255,7 @@ function renderSchema(schema, options) {
       type.enumValues.forEach((value) => {
         printer('<tr>')
         printer(
-          `<td valign="top"><strong>${value.name}</strong>${
-            value.isDeprecated ? ' ⚠️' : ''
+          `<td valign="top"><strong>${value.name}</strong>${value.isDeprecated ? ' ⚠️' : ''
           }</td>`
         )
         if (value.description || value.isDeprecated) {
